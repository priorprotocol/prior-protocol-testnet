const directConnectWallet = useCallback(async () => {
  try {
    if (!window.ethereum) {
      toast({
        title: "MetaMask Not Found",
        description: "Please install MetaMask to connect your wallet.",
        variant: "destructive"
      });
      window.open('https://metamask.io/download.html', '_blank');
      return null;
    }
    
    console.log("Requesting accounts directly...");
    const accounts = await window.ethereum.request({ method: "eth_requestAccounts" });
    const account = accounts[0];
    
    if (!account) {
      toast({
        title: "No Account Found",
        description: "Please connect an account in your MetaMask wallet.",
        variant: "destructive"
      });
      return null;
    }
    
    console.log("Account connected:", account);
    
    // Force network switch
    try {
      const { switchToBaseSepoliaNetwork } = await import('@/lib/web3');
      await switchToBaseSepoliaNetwork();
    } catch (error) {
      console.error("Network switch error:", error);
      toast({
        title: "Network Error",
        description: "Please switch to Base Sepolia network manually",
        variant: "destructive"
      });
    }
    
    // Force state update in multiple ways
    try {
      // Update through standard connect
      await connectWallet();
      
      // Additional direct update if needed
      const { updateWalletAddressGlobally } = await import('@/context/WalletContext');
      updateWalletAddressGlobally(account);
      
      // Force a re-render by resetting token selections
      setFromToken(null);
      setToToken(null);
    } catch (error) {
      console.error("State update error:", error);
    }
    
    toast({
      title: "Wallet Connected",
      description: `Connected to ${account.substring(0, 6)}...${account.substring(account.length - 4)}`,
    });
    
    return account;
  } catch (error) {
    console.error("Connection error:", error);
    toast({
      title: "Connection Failed",
      description: error instanceof Error ? error.message : "Failed to connect",
      variant: "destructive"
    });
    return null;
  }
}, [connectWallet, toast]);